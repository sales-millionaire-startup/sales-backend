// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Category {
    id Int @id @default(autoincrement())

    name_en String? @unique
    name_ge String? @unique
    name_tr String? @unique

    depth Int?
    maxDepth Int?

    parentCategoryId Int?
    parentCategory Category? @relation("childCategories", fields: [parentCategoryId], references: [id], onDelete: Cascade)

    childCategories Category[] @relation("childCategories")

    parentMostCategoryId Int?
    parentMostCategory Category? @relation("parentMostCategory", fields: [parentMostCategoryId], references: [id], onDelete: Cascade)

    parentMostChildCategories Category[] @relation("parentMostCategory")

    products Product[]

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

model Product {
    id Int @id @default(autoincrement())

    name_en String? @unique
    name_ge String? @unique
    name_tr String? @unique

    categoryId Int
    category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

    specifications Specification []

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

model Specification {
    id Int @id @default(autoincrement())
    name_en String? @unique
    name_ge String? @unique
    name_tr String? @unique

    values String[]

    productId Int
    product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

    unitsOnSpecifications UnitOnSpecification[]

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

model UnitOnSpecification {
    unit   Unit @relation(fields: [unitId], references: [id])
    unitId Int

    specification   Specification @relation(fields: [specificationId], references: [id])
    specificationId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    @@id([specificationId, unitId])
}


model Unit {
    id Int @id @default(autoincrement())
    name_en String? @unique
    name_ge String? @unique
    name_tr String? @unique

    unitsOnSpecifications UnitOnSpecification[]

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}
